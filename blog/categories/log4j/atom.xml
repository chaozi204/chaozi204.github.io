<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: log4j | ]]></title>
  <link href="http://chaozi204.github.io/blog/categories/log4j/atom.xml" rel="self"/>
  <link href="http://chaozi204.github.io/"/>
  <updated>2016-02-15T16:12:39+08:00</updated>
  <id>http://chaozi204.github.io/</id>
  <author>
    <name><![CDATA[超子]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[动态设置 log4j 日志级别]]></title>
    <link href="http://chaozi204.github.io/blog/dynamically-set-logger-level/"/>
    <updated>2016-02-08T22:19:14+08:00</updated>
    <id>http://chaozi204.github.io/blog/dynamically-set-logger-level</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#log4j-" id="markdown-toc-log4j-">log4j 配置属性</a></li>
  <li><a href="#log4j--1" id="markdown-toc-log4j--1">在线设置Log4j 日志级别</a></li>
</ul>

<h4 id="log4j-">log4j 配置属性</h4>
<p>Log4j的配置文件log4j-properties,支持预先声明属性var,并通过 ${var} 的方式使用如：
 <figure class='code'><figcaption><span>配置样例 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## 这里定义的logs.dir属性,后面使用${logs.dir}的方使用
</span><span class='line'> logs.dir=./logs
</span><span class='line'> log4j.appender.DRFAppender=org.apache.log4j.DailyRollingFileAppender
</span><span class='line'> log4j.appender.DRFAppender.DatePattern=’.’yyyy-MM-dd-HH
</span><span class='line'> log4j.appender.DRFAppender.File=${logs.dir}/server.log
</span><span class='line'> log4j.appender.DRFAppender.layout=org.apache.log4j.PatternLayout
</span><span class='line'> log4j.appender.DRFAppender.layout.ConversionPattern=%-5p %c.%M [%t] - %m%n</span></code></pre></td></tr></table></div></figure></p>

<p>上诉配置表示默认情况下，日志存储路径就是java工作目录下的logs目录（没有则创建）。</p>

<p>设置属性var的值，一般有两种方式：</p>

<ol>
  <li>通过修改log4j.properties文件，将属性 logs.dir=./logs 修改为新的路径地址logs.dir=/x1/x2</li>
  <li>通过jvm options的方式修改log4j的属性的值，而且通过 jvm options 的方式修改的值优先于 log4j.properties文件内定义的值。也就是说如果jvm的启动options中带有 -Dlogs.dir=xx ，那么这个值会优先被 log4j 系统使用（而不会再考虑配置文件中同样定义的属性）</li>
</ol>

<h4 id="log4j--1">在线设置Log4j 日志级别</h4>
<p>hadoop RM,NN,DN,NM等支持动态在线设置log4j的日志级别，参考：<a href="https://hadoop.apache.org/docs/r2.7.2/hadoop-project-dist/hadoop-common/CommandsManual.html#daemonlog">daemonlog</a></p>

<p>改功能的原理是，利用log4j的Logger API中setLevel方法，在线修改当前Logger使用的日志级别。然而，这种方式并不适用所有的log4j的实现，它只能适用于Logger类中对外开放setLevel方法的，目前知道的两个logger的实现带有这个方法：</p>

<ul>
  <li>org.apache.log4j.Logger</li>
  <li>java.util.logging.Logger</li>
</ul>

<p>我在实际开发工作中，经常会需要在线的修改日志级别来方便调试和问题排查，因此我根据hadoop对这个功能的实现进行了抽取，独立形成一个简单的小工具，用以在实际开发中方便的使用logg4j的在线动态修改日志级别(采用restful方式，进行修改)。例子参考：
<a href="https://github.com/chaozi204/grindstone/tree/master/knife">com.lee.knife.runtime.rest.LOGTest</a></p>
]]></content>
  </entry>
  
</feed>
